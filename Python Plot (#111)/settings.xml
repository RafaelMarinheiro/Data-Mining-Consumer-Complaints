<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
<entry key="node_file" type="xstring" value="settings.xml"/>
<config key="flow_stack"/>
<config key="internal_node_subsettings">
<entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
</config>
<config key="model">
<config key="figure.width_Internals">
<entry key="SettingsModelID" type="xstring" value="SMID_integer"/>
<entry key="EnabledStatus" type="xboolean" value="true"/>
</config>
<entry key="figure.width" type="xint" value="1000"/>
<config key="figure.height_Internals">
<entry key="SettingsModelID" type="xstring" value="SMID_integer"/>
<entry key="EnabledStatus" type="xboolean" value="true"/>
</config>
<entry key="figure.height" type="xint" value="700"/>
<config key="figure.output.file_Internals">
<entry key="SettingsModelID" type="xstring" value="SMID_string"/>
<entry key="EnabledStatus" type="xboolean" value="true"/>
</config>
<entry key="figure.output.file" type="xstring" value="/Users/marinheiro/Desktop/Projects/knime/Consumer_Complaints/results/plots/KS_Decision_Tree.png"/>
<config key="overwrite.ok_Internals">
<entry key="SettingsModelID" type="xstring" value="SMID_boolean"/>
<entry key="EnabledStatus" type="xboolean" value="true"/>
</config>
<entry key="overwrite.ok" type="xboolean" value="true"/>
<config key="node.script_Internals">
<entry key="SettingsModelID" type="xstring" value="SMID_string"/>
<entry key="EnabledStatus" type="xboolean" value="true"/>
</config>
<entry key="node.script" type="xstring" value="import numpy as np%%00010import random%%00010from matplotlib import pyplot as plt%%00010%%00010def ks_curve(data, target):%%00010%%00009data = sorted(data)%%00010%%00009num_total = len(data)%%00010%%00009num_target = len([t for (p, t) in data if t == target])%%00010%%00009num_nontarget = num_total - num_target%%00010%%00009%%00010%%00009x_values = [0.0]%%00010%%00009positive_values = [0.0]%%00010%%00009negative_values = [0.0]%%00010%%00009ks_values = [0.0]%%00010%%00010%%00009x = 0.0%%00010%%00009positive = 0.0%%00010%%00009negative = 0.0%%00010%%00010%%00010%%00010%%00009for (p, t) in data:%%00010%%00009%%00009x = x + 1.0/num_total%%00010%%00009#%%00009x = p%%00010%%00009%%00009if t == target:%%00010%%00009%%00009%%00009positive = positive + 1.0/num_target%%00010%%00009%%00009else:%%00010%%00009%%00009%%00009negative = negative + 1.0/num_nontarget%%00010%%00010%%00009%%00009x_values.append(x)%%00010%%00009%%00009positive_values.append(positive)%%00010%%00009%%00009negative_values.append(negative)%%00010%%00009%%00009ks_values.append(positive-negative)%%00010%%00010%%00009return (x_values, positive_values, negative_values, ks_values)%%00009%%00010%%00010def plot_ks_curve(data, target):%%00010%%00009(x, positive, negative, ks) = ks_curve(data, target)%%00010%%00010%%00009plt.xlim(0, 1)%%00010%%00009plt.ylim(0, 1)%%00010%%00009plt.plot(x, positive, 'b', label='Target')%%00010%%00009plt.plot(x, negative, 'r', label='~Target')%%00010%%00009plt.plot(x, ks, 'g', label='KS')%%00010%%00009plt.plot(x, [0]*len(x), 'black')%%00010%%00009plt.legend(loc='best')%%00010%%00009ks_max = max(ks)%%00010%%00009plt.title(&quot;Maximum KS = %f when Score = %f&quot;%(max(ks), x[ks.index(ks_max)]))%%00010%%00009plt.show()%%00010%%00010dadata = zip(kIn['P (Target=RUIM)'], kIn['Target'])%%00010plot_ks_curve(dadata, 'BOM')"/>
<config key="node.template_Internals">
<entry key="SettingsModelID" type="xstring" value="SMID_string"/>
<entry key="EnabledStatus" type="xboolean" value="true"/>
</config>
<entry key="node.template" type="xstring" value=""/>
</config>
<config key="nodeAnnotation">
<entry key="text" type="xstring" value="KS"/>
<entry key="bgcolor" type="xint" value="16777215"/>
<entry key="x-coordinate" type="xint" value="572"/>
<entry key="y-coordinate" type="xint" value="1371"/>
<entry key="width" type="xint" value="113"/>
<entry key="height" type="xint" value="13"/>
<entry key="alignment" type="xstring" value="CENTER"/>
<config key="styles"/>
</config>
<entry key="customDescription" type="xstring" isnull="true" value=""/>
<entry key="state" type="xstring" value="CONFIGURED"/>
<entry key="factory" type="xstring" value="de.mpicbg.knime.scripting.python.plots.PythonPlotNodeFactory"/>
<entry key="node-name" type="xstring" value="Python Plot"/>
<entry key="node-bundle-name" type="xstring" value="Ptyhon Scripting Integration for KNIME"/>
<entry key="node-bundle-symbolic-name" type="xstring" value="de.mpicbg.knime.scripting.python"/>
<entry key="node-bundle-vendor" type="xstring" value="Max Planck Institute of Molecular Cell Biology and Genetics (MPI-CBG)"/>
<entry key="node-bundle-version" type="xstring" value="2.0.2.201505280911"/>
<config key="factory_settings"/>
<entry key="name" type="xstring" value="Python Plot"/>
<entry key="hasContent" type="xboolean" value="false"/>
<entry key="isInactive" type="xboolean" value="false"/>
<config key="ports">
<config key="port_1">
<entry key="index" type="xint" value="1"/>
<entry key="port_dir_location" type="xstring" isnull="true" value=""/>
</config>
</config>
<config key="filestores">
<entry key="file_store_location" type="xstring" isnull="true" value=""/>
<entry key="file_store_id" type="xstring" isnull="true" value=""/>
</config>
</config>
